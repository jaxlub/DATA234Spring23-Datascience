---
title: "Module2Quiz"
author: "Jax Lubkowitz"
format: 
  html:
    embed-resources: true
---

# **Module 2 Quiz (Take-Home)**

**Statement of Integrity**: "All work presented is my own, and I have followed all rules for collaboration. If I used any AI on this assignment, I have clearly stated both (1) what my search prompt was and (2) what I used from the AI answer.""

Jax Lubkowitz

```{r}
library(tidyverse)
library(dplyr)
stat_113_df <- read_csv(here("data/stat113.csv")) |>
  filter(Sex != "Choose") |>
  filter(GPA <= 4.0)
```

**Question 1** (3 points). Complete the following. (a) Construct a scatterplot of `Pulse` (on the y-axis) vs.Â `Exercise` (on the x-axis). (b) Colour the points by `Sex` of the student. (c) Add a **single** overall smoother to the scatterplot (NOT one smoother for each level of `Sex`).

```{r}
ggplot(data = stat_113_df, aes(x = Exercise, y = Pulse)) +
    geom_point(aes(colour = Sex)) +
    geom_smooth()
```

**Question 2**. (2 points). Change your plot in the previous question so that (1) you no longer have any smoothers and (2) instead of colouring by `Sex`, you facet by `Sex`.

```{r}
ggplot(data = stat_113_df, aes(x = Exercise, y = Pulse)) +
    geom_point() +
    facet_grid(~Sex)
```

**Question 3** (2 points). Create a new variable called `BMI` that calculates the BMI of each student in the data set. Note that the `^` symbol is the exponentiation symbol in `R`.

```{r}
stat_113_df <- stat_113_df |> mutate(BMI = (703*Wgt)/(Hgt^2))
```

**Question 4** (3 points). Create a new variable called `Status` that classifies each individual according to the four categories that the Center for Disease Control uses for `BMI` (keeping in mind that `BMI` does not necessarily reflect health of an individual person).

-   BMI \<= 18.4 is `"underweight"`

-   18.5 - 24.9 is `"normal"`

-   25 - 49.9 is `"overweight"`

-   BMI \>= 50.0 is `"obese"`

```{r}
stat_113_df <- stat_113_df |> mutate(status = case_when(BMI <= 18.4 ~ "underweight",
                                     (BMI > 18.5 & BMI < 24.9) ~ "normal",
                                     (BMI >=25 & BMI < 50) ~ "overweight",
                                     BMI >= 50 ~ "obese"))
```

**Question 5** (3 points). Perform the following subsets of the data. There is no need to name any of the new data sets. (a). Create a data set with the first 100 rows of the `stat_113_df`. (b). Create a data set for only first-year students in STAT 113 (so where `Year` is `1`). (c). Create a data set for students who play a `Sport` AND who also prefer an Olympic medal `Award`. (d). Create a data set for students `Pulse` more than `75` beats per minute OR who have an `Exercise` value more than `10` hours per week.

```{r}
#a
first_100_rows_df <- stat_113_df |> slice_head(n=100)

#b
first_years_df <- stat_113_df |> filter(Year == "FirstYear")

#c 
olympic_dreaming_athletes_df <- stat_113_df |> filter(Sport == "Yes" & Award == "Olympic")

#d
pulse_exercise_df <- stat_113_df |> filter(Pulse > 75 | Exercise > 10)

```

**Question 6** (2 points). Using `stat_113_df`, find the median `Pulse` for each level of the `Sport`-`Sex` combination. You should remove the missing values for `Pulse` when making the calculation and can use the following code to remove missing values from `Sport` and `Sex`:

```{r}
stat_113_df_nomiss <- stat_113_df |>
  filter(!is.na(Sex) & !is.na(Sport))


stat_113_df_nomiss |> filter(!is.na(Pulse)) |> 
  group_by(Sport,Sex) |> 
  summarise(Pulse_Median = median(Pulse))
```
