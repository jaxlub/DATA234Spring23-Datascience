---
title: "Section6-tidyr"
author: "Jax Lubkowitz"
format: 
  html:
    embed-resources: true
---

# Tidyr

```{r}
library(tidyverse)
library(ggplot2)
library(here)
polls <- read_csv(here("data/rcp-polls.csv"), na = "--")

polls_sep <- polls |>
  separate(col = Sample, into = c("Sample_size", "Sample_type"), 
           sep = " ")

seperated <- polls_sep |>
  separate(col = Date, into = c("Start", "End"),
           sep = " - ")

polls_sillytest <- polls_sep |>
  separate(col = Start, into = c("Start_month", "Start_day"), 
           sep = "/")

polls_new <- polls_sep |>
  rename(Clinton_D = `Clinton (D)`, Trump_R = `Trump (R)`,
         Johnson_L = `Johnson (L)`, Stein_G = `Stein (G)`)
```

```{r}
toy_df <- tibble::tibble(show = c("Bojack Horseman: Netflix",
                                  "VEEP: HBO",
                                  "American Vandal: Netflix",
                                  "Community: Peacock"),
                         seasons = c("1-6", "1-7", "1-2", "1-6"),
                         main_first = c("Bojack", "Selina", "Peter", "Jeff"),
                         main_last = c("Horseman", "Meyer", "Molganado", "Winger"))

toy_df |> separate(col = show, into = c("Show", "Provider"), sep = ": ") |> 
  separate(col = seasons, into = c("First Season", "Last Season"), sep = "-") |> unite("Main Character", c("main_first", "main_last"), sep = " ")
```


```{r}
polls_clean <- polls |>
  separate(col = Sample, into = c("Sample_size", "Sample_type"), 
           sep = " ")  |>
  separate(col = Date, into = c("Start", "End"),
           sep = " - ") |> 
  rename(Clinton_D = `Clinton (D)`, Trump_R = `Trump (R)`,
         Johnson_L = `Johnson (L)`, Stein_G = `Stein (G)`)
polls_clean

polls_long <- polls_clean |>
  pivot_longer(cols = c(Clinton_D, Trump_R, Johnson_L, Stein_G),
               names_to = "candidate", values_to = "poll_percent")
ggplot(data = polls_long,
       aes(x = as.Date(Start, "%m/%d"), y = poll_percent,
           colour = candidate)) +
  geom_point() + labs(x = "Poll Start Date")

```

```{r}
stat113_df <- read_csv(here::here("data/stat113.csv"))
stat113_sum <- stat113_df |> filter(!is.na(Sex)) |> group_by(Year, Sex) |>
  summarise(n_students = n())
stat113_sum
stat113_sum |> pivot_wider(names_from = Year, values_from = n_students)

stat113_df |> filter(!is.na(Sex) & !is.na(Sport)) |> group_by(Sex,Sport) |> summarise(averageGPA = mean(GPA, na.rm = TRUE))
```

# 9.1
## Exercise 1
In this reading we see how data presentations can be designed to mislead people. It depends on the viewers to not fully analyze or know to look at how the visual is designed such as in media. A common practice of this is too change the scale of the y axis which can majorly skew the shape of the distribution. Data is viewed as a tell-all unbiased method but when people begin to introduce bias into the visualization to mislead people, serious ethical concerns arise. It is important to understand how unbias, fact based data can be corrupted with bias and as data science it is important to acknowledge this and try to show data in accurate and meaningful ways. 

# Exercise 2
The race predictor based off peoples names violates many of these but I think the most relevant is 9 and 11, about protecting peoples privacy and the impacts this data could be used for as discrimination. This package has the ability to violate the privacy of many people. The other section I read was on "gaydar" which also violates 11 and has serious implications for exposing peoples privacy and increase risk of bias for individuals. 

# Exercise 3
Missing data on how spotify pays artists has major implications for discrimination and unequal and unequitable pay. This missing data can allow them to pay artist based on other factors such as race, gender or other factors which are not fair or legal to use in these ways. 

# Exercise 4
I read the article on racial bias in medical software and how it scored white patients with less chronic diseases would benefit from more medical support then black patients. This occurred by using price to the medical system per chronic disease but did not account for the fact that black patients incurred less costs and thus scored white patients with fewer chronic diseases on the same level as black patients with more chronic diseases. As a results the variable used to determine health support was biased and introduced major discrimination into the healthcare system. 


```{r}
prices_df <- read.csv(here("data/UBSprices2.csv"))

prices_df |> pivot_longer(c(2,3,4,5,6,7), 
                          names_to = "Commodity_year", 
                          values_to = "price") |> 
  separate(Commodity_year, 
           into = c("commodity", "year"),
           sep = -4)

prices_df |> 
  pivot_longer(c(2,3,4,5,6,7), 
                          names_to = "Commodity_year", 
                          values_to = "price") |> 
  separate(Commodity_year, 
           into = c("commodity", "year"),
           sep = -4) |>
  pivot_wider(names_from = "commodity", values_from = "price")
  

mortality_df <- read_csv(here("data/under5mortality.csv"))
mort_long <- mortality_df |> pivot_longer(c(2:217), names_to = "year", values_to = "mortality") |>
  rename(country = 'Under five mortality')

ggplot(data = mort_long, aes(x = year, y = mortality, group = country)) +
  geom_line(alpha = .2)
```

```{r}
baseball_df <- read_csv(here("data/mlb2016.csv"))

baseball_df <- baseball_df |> separate(Years, into = c("duration", "range"), sep = " ") |>
  separate(range, into = c("start", "end"), sep = '-') 

# doesnt have a - to sep on 
baseball_df <- baseball_df |>
  mutate(Salary = parse_number(Salary),
         Total.Value = parse_number(Total.Value),
         Avg.Annual = parse_number(Avg.Annual),
         start = parse_number(start),
         end = parse_number(end))
baseball_df

ggplot(data = baseball_df, aes(x = POS, y = Salary)) + 
  geom_boxplot()

ggplot(data = baseball_df, aes(x = POS, y = Salary)) +
  geom_jitter(width = .2)

ggplot(data = baseball_df, aes(x = Salary)) +
  geom_histogram(color = "black", fill = "white") +
  facet_wrap(~POS)
```



```{r}
nfl_df <- read_csv(here::here("data/nfl_salary.csv"))
head(nfl_df)

nfl_longer <- nfl_df |> pivot_longer(2:11, names_to = "Position", values_to = "salary") 

nfl_long <- nfl_longer |> group_by(year, Position) |> mutate(rank = rank(desc(salary), ties.method = 'min')) |> arrange(year, Position)

top <- nfl_long |> filter(rank == 1) |> ungroup()
ggplot(data = top, aes(x = year, y = salary, color = Position)) +
  geom_line()

ggplot(data = top, aes(x = year, y = salary)) +
  geom_line() +
  facet_wrap(~Position)

top_20 <- nfl_long |> filter(rank < 20 ) |> summarise(average = mean(salary))

ggplot(data = top_20, aes(x = year, y = average)) +
  geom_line() +
  facet_wrap(~Position)

ggplot(data = top_20, aes(x = year, y = average, color = Position)) +
  geom_line()

#1 inflates to 1.49
adjusted <- top_20 |> filter(year == 2011 | year == 2018) |> mutate(mean_salary_adj = if_else(
  year == 2011, true = average*1.1447, 
  false = average))

ggplot(data = adjusted, aes(x = year, y = average, color = Position)) +
  geom_line()


nfl_18 <- nfl_long |> filter(year == 2018) 
ggplot(data = nfl_18, aes(x = rank, y = salary, color = Position)) +
  geom_line()
```

